env:
 - CABALVER=1.18 GHCVER=7.0.4
 - CABALVER=1.20 GHCVER=7.0.4
 - CABALVER=1.22 GHCVER=7.0.4
 - CABALVER=1.18 GHCVER=7.2.2
 - CABALVER=1.20 GHCVER=7.2.2
 - CABALVER=1.22 GHCVER=7.2.2
 - CABALVER=1.16 GHCVER=7.4.2
 - CABALVER=1.18 GHCVER=7.4.2
 - CABALVER=1.20 GHCVER=7.4.2
 - CABALVER=1.22 GHCVER=7.4.2
 - CABALVER=1.16 GHCVER=7.6.3
 - CABALVER=1.18 GHCVER=7.6.3
 - CABALVER=1.20 GHCVER=7.6.3
 - CABALVER=1.22 GHCVER=7.6.3
 - CABALVER=1.18 GHCVER=7.8.4
 - CABALVER=1.20 GHCVER=7.8.4
 - CABALVER=1.22 GHCVER=7.8.4
 - CABALVER=1.22 GHCVER=7.10.1
 - CABALVER=head GHCVER=head

matrix:
  allow_failures:
    - env: CABALVER=head GHCVER=head
    
before_install:
 - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
 - travis_retry sudo apt-get update
 - travis_retry sudo apt-get install cabal-install-$CABALVER ghc-$GHCVER

# Update happy when building with GHC >= 7.8
 - |
   if [ $GHCVER = "head" ] || [ ${GHCVER%.*} = "7.8" ] || [ ${GHCVER%.*} = "7.10" ]; then
     travis_retry sudo apt-get install happy-1.19.4 alex-3.1.3
     export PATH=/opt/alex/3.1.3/bin:/opt/happy/1.19.4/bin:$PATH
   else
     travis_retry sudo apt-get install happy alex
   fi 
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.cabal/bin:$PATH

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - travis_retry cabal update
 - cabal install --only-dependencies --enable-tests --enable-benchmarks

script:
 - |
   if [ $CABALVER = "1.22" ]; then
      cabal configure --enable-tests --enable-benchmarks --enable-coverage -v2
   else
      cabal configure --enable-tests --enable-benchmarks --enable-library-coverage -v2
   fi
 - cabal build   # this builds all libraries and executables (including tests/benchmarks)
 - cabal test
 - cabal check
 - cabal sdist
 
# The following scriptlet checks that the resulting source distribution can be built & installed
 - export SRC_TGZ=$(cabal info . | awk '{print $2 ".tar.gz";exit}') ;
   cd dist/;
   if [ -f "$SRC_TGZ" ]; then
      cabal install --force-reinstalls "$SRC_TGZ";
   else
      echo "expected '$SRC_TGZ' not found";
      exit 1;
   fi 

after_script:
  - cabal install --force-reinstalls hpc-coveralls
  - find ~/.cabal/bin/
  - hpc-coveralls network-anonymous-i2p-test
